{
  "Name": "UD 3) Create Ticket for user",
  "Description": null,
  "GroupName": "1.0) USU Dispatcher",
  "Steps": [
    {
      "Type": 1,
      "Name": null,
      "TechnologyKey": "Webhook.v1",
      "ActionKey": "oa://Webhook.v1/Receive",
      "Properties": [
        {
          "Key": "Oktopus.JsonContentResultVariableName",
          "Value": "Request"
        },
        {
          "Key": "Oktopus.WebhookIdentifier",
          "Value": "USU-Dispatcher-CreateTicket"
        }
      ]
    },
    {
      "Type": 2,
      "Name": null,
      "TechnologyKey": "Mail.v1",
      "ActionKey": "oa://Mail.v1/ParseEml",
      "Properties": [
        {
          "Key": "EmlExpression",
          "Value": "{{Request.EmlFile | string.base64_decode}}"
        },
        {
          "Key": "InlineHtmlAttachmentsExpression",
          "Value": "True"
        },
        {
          "Key": "ResultVariableName",
          "Value": "Mail"
        },
        {
          "Key": "ResultVariableName.Attachments",
          "Value": "MailAttachments"
        }
      ]
    },
    {
      "Type": 2,
      "Name": "Get Person reported by",
      "TechnologyKey": "USM.v1",
      "ActionKey": "oa://USM.v1/GetObjectByField",
      "Connection": {
        "Name": "usm.MyCompany.com"
      },
      "Properties": [
        {
          "Key": "FieldExpandExpression",
          "Value": "persNo\r\npersonId\r\nName"
        },
        {
          "Key": "FieldName",
          "Value": "email"
        },
        {
          "Key": "FieldValue",
          "Value": "{{Request.MailboxUpn}}"
        },
        {
          "Key": "ItemNotFoundAction",
          "Value": "Continue"
        },
        {
          "Key": "ObjectType",
          "Value": "Person"
        },
        {
          "Key": "ResultVariableName",
          "Value": "PersonReportedBy"
        }
      ]
    },
    {
      "Type": 2,
      "Name": "Get Person reported for",
      "TechnologyKey": "USM.v1",
      "ActionKey": "oa://USM.v1/GetObjectByField",
      "Connection": {
        "Name": "usm.MyCompany.com"
      },
      "Properties": [
        {
          "Key": "FieldExpandExpression",
          "Value": "persNo\r\npersonId\r\nName"
        },
        {
          "Key": "FieldName",
          "Value": "email"
        },
        {
          "Key": "FieldValue",
          "Value": "{{Mail.From[0].Address}}"
        },
        {
          "Key": "ItemNotFoundAction",
          "Value": "Continue"
        },
        {
          "Key": "ObjectType",
          "Value": "Person"
        },
        {
          "Key": "ResultVariableName",
          "Value": "PersonReportedFor"
        }
      ]
    },
    {
      "Type": 2,
      "Name": "Get Default SupportGroup",
      "TechnologyKey": "USM.v1",
      "ActionKey": "oa://USM.v1/FindObjectsByCondition",
      "Connection": {
        "Name": "usm.MyCompany.com"
      },
      "Properties": [
        {
          "Key": "ConditionsExpression",
          "Value": "personId,==,{{\r\ncase Request.Parameters.FollowUpAction\r\nwhen \u0022AssignToMe\u0022\r\n  PersonReportedBy.personId | step.skipIfEmpty | string.remove \u0022,\u0022 | convert.tocsv\r\nelse\r\n  step.skip\r\nend }}\r\nispersondefault,==,true"
        },
        {
          "Key": "FieldExpandExpression",
          "Value": "supportgroup.supportgroup,\u0022Name\u0022"
        },
        {
          "Key": "ObjectType",
          "Value": "Personsupgroup"
        },
        {
          "Key": "ResultVariableName",
          "Value": "PersonReportedByDefaultSupportGroup"
        }
      ]
    },
    {
      "Type": 2,
      "Name": "Prepare Ticket create",
      "TechnologyKey": "Oktopus.v1",
      "ActionKey": "oa://Oktopus.v1/EvaluateExpression",
      "Properties": [
        {
          "Key": "Expression",
          "Value": "personReportedBy = PersonReportedBy\r\npersonReportedFor = PersonReportedFor\r\nif personReportedBy == null\r\n  personReportedBy = globalVariable.load \u0022USU-Dispatcher-DummyUser\u0022 | json.parse\r\nend\r\nif personReportedFor == null\r\n  personReportedFor = globalVariable.load \u0022USU-Dispatcher-DummyUser\u0022 | json.parse\r\nend\r\n\r\ncreateTicketDetails = { }\r\n\r\nwith createTicketDetails\r\n  MailSubject = Mail.Subject\r\n  if Mail.Body | string.empty\r\n    MailBody = Mail.TextBody\r\n  else\r\n    MailBody = Mail.Body\r\n  end\r\n  EmlFileName = Mail.Subject | string.GetFileName \u0022eml\u0022 \u0022Email\u0022\r\n  \r\n  PersonReportedBy = personReportedBy\r\n  PersonReportedFor = personReportedFor\r\n\r\n  case Request.Parameters.FollowUpAction\r\n  when \u0022AssignToMe\u0022\r\n    DesiredStatus = \u0022IN_PGR\u0022 # In Progress\r\n    DesiredSupportPersonId = personReportedBy.id\r\n    DesiredSupportGroupName = PersonReportedByDefaultSupportGroup[0].Name\r\n  when \u0022Forward\u0022\r\n    DesiredStatus = \u0022IN_ASG\u0022 # Assigned to (Weitergeleitet)\r\n    DesiredSupportPersonId = \u0022\u0022 # Clear support person\r\n    DesiredSupportGroupName = Request.Parameters.FollowUpGroup.DisplayName\r\n  when \u0022Close\u0022\r\n    DesiredStatus = \u0022IN_CLD\u0022 # Closed\r\n  end\r\n\r\n  if Request.Parameters.TimeTrack | string.HasContent\r\n    TimeBooking = (Request.Parameters.TimeTrack | timespan.parse)\r\n    if TimeBooking.total_minutes \u003C 1\r\n      TimeBooking = null\r\n    end\r\n  end\r\n  Comment = Request.Parameters.Comment\r\nend\r\n\r\ncreateTicketDetails | variable.store \u0022CreateTicketDetails\u0022"
        }
      ]
    },
    {
      "Type": 2,
      "Name": null,
      "TechnologyKey": "USM.v1",
      "ActionKey": "oa://USM.v1/CreateTicket",
      "Connection": {
        "Name": "usm.MyCompany.com"
      },
      "Properties": [
        {
          "Key": "AttachmentsExpression",
          "Value": "{{MailAttachments}}\r\n{{CreateTicketDetails.EmlFileName|convert.tocsv}},{{Request.EmlFile}}"
        },
        {
          "Key": "FieldExpandExpression",
          "Value": "ticketId\r\nticketno\r\ntckShorttext\r\nstatus\r\npersonaffected,\u0022PersonReportedFor (personaffected)\u0022\r\npersonrequestedby,\u0022PersonReportedBy (personrequestedby)\u0022\r\nsupportgroup,\u0022SupportGroup (supportgroup)\u0022\r\npersoncurrent,\u0022SupportPerson (personcurrent)\u0022"
        },
        {
          "Key": "ResultVariableName",
          "Value": "CreatedTicket"
        },
        {
          "Key": "USM:description",
          "Value": "{{CreateTicketDetails.MailBody}}"
        },
        {
          "Key": "USM:personIdAffected",
          "Value": "{{CreateTicketDetails.PersonReportedFor.id | variable.skipIfEmpty}}"
        },
        {
          "Key": "USM:personIdCurrent",
          "Value": "{{ CreateTicketDetails.DesiredSupportPersonId | variable.skipIfNull }}"
        },
        {
          "Key": "USM:personIdReqBy",
          "Value": "{{CreateTicketDetails.PersonReportedBy.id | variable.skipIfEmpty}}"
        },
        {
          "Key": "USM:statementtype",
          "Value": "Information"
        },
        {
          "Key": "USM:status",
          "Value": "{{CreateTicketDetails.DesiredStatus}}"
        },
        {
          "Key": "USM:supportgroup",
          "Value": "{{CreateTicketDetails.DesiredSupportGroupName | variable.SkipIfEmpty}}"
        },
        {
          "Key": "USM:tckShorttext",
          "Value": "{{CreateTicketDetails.MailSubject}}"
        },
        {
          "Key": "USM:ticketclass",
          "Value": "Incident"
        },
        {
          "Key": "USM:tickettype",
          "Value": "{{Request.Parameters.TicketType}}"
        }
      ]
    },
    {
      "Type": 2,
      "Name": "First Ticketdesc #1",
      "TechnologyKey": "USM.v1",
      "ActionKey": "oa://USM.v1/FindObjectsByCondition",
      "Connection": {
        "Name": "usm.MyCompany.com"
      },
      "Properties": [
        {
          "Key": "ConditionsExpression",
          "Value": "ticketId,==,{{CreatedTicket.ticketId | string.remove \u0022,\u0022}}\r\ndescno,==,1"
        },
        {
          "Key": "FieldExpandExpression",
          "Value": "duration"
        },
        {
          "Key": "ObjectType",
          "Value": "Ticketdesc{{ if CreateTicketDetails.TimeBooking == null; step.skip; end }}"
        },
        {
          "Key": "ResultVariableName",
          "Value": "TicketDescriptions"
        }
      ]
    },
    {
      "Type": 2,
      "Name": "Update Ticketdesc #1 with time",
      "TechnologyKey": "USM.v1",
      "ActionKey": "oa://USM.v1/ChangeObject",
      "Connection": {
        "Name": "usm.MyCompany.com"
      },
      "Properties": [
        {
          "Key": "FieldExpandExpression",
          "Value": "duration"
        },
        {
          "Key": "ObjectIdExpression",
          "Value": "{{TicketDescriptions[0].id | step.skipIfEmpty}}"
        },
        {
          "Key": "ResultVariableName",
          "Value": ""
        },
        {
          "Key": "USM:duration",
          "Value": "{{CreateTicketDetails.TimeBooking.total_hours}}"
        }
      ]
    },
    {
      "Type": 2,
      "Name": "Create Comment Ticketdesc",
      "TechnologyKey": "USM.v1",
      "ActionKey": "oa://USM.v1/CreateObject",
      "Connection": {
        "Name": "usm.MyCompany.com"
      },
      "Properties": [
        {
          "Key": "FieldExpandExpression",
          "Value": ""
        },
        {
          "Key": "ObjectTypeExpression",
          "Value": "Ticketdesc"
        },
        {
          "Key": "ResultVariableName",
          "Value": ""
        },
        {
          "Key": "USM:description",
          "Value": "{{CreateTicketDetails.Comment | step.SkipIfEmpty}}"
        },
        {
          "Key": "USM:personcreate",
          "Value": "{{PersonReportedBy.id}}"
        },
        {
          "Key": "USM:statementtype",
          "Value": "Statementtype-309#"
        },
        {
          "Key": "USM:tckShorttext",
          "Value": "Dispatcher"
        },
        {
          "Key": "USM:ticket",
          "Value": "{{CreatedTicket.id}}"
        }
      ]
    },
    {
      "Type": 2,
      "Name": "Return Ticket info",
      "TechnologyKey": "Webhook.v1",
      "ActionKey": "oa://Webhook.v1/Response",
      "Properties": [
        {
          "Key": "ContentExpression",
          "Value": "{{\r\n{\r\n  Ticket: {\r\n    Id: CreatedTicket.id,\r\n    Number: CreatedTicket.ticketno,\r\n    Subject: CreatedTicket.tckShorttext,\r\n    Link: CreatedTicket.runLink\r\n  }\r\n} }}"
        }
      ]
    }
  ]
}
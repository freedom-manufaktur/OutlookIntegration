{
  "Name": "SD 4) Update Ticket for user",
  "Description": null,
  "GroupName": "1.0) SMAX Dispatcher",
  "Steps": [
    {
      "Type": 1,
      "Name": null,
      "TechnologyKey": "Webhook.v1",
      "ActionKey": "oa://Webhook.v1/Receive",
      "Properties": [
        {
          "Key": "Oktopus.JsonContentResultVariableName",
          "Value": "Request"
        },
        {
          "Key": "Oktopus.WebhookIdentifier",
          "Value": "SMAX-Dispatcher-UpdateTicket"
        }
      ]
    },
    {
      "Type": 2,
      "Name": "Get Ticket to update",
      "TechnologyKey": "SMAX.v1",
      "ActionKey": "oa://SMAX.v1/FindRecordByQuery",
      "Connection": {
        "Name": "smax.MyCompany.com"
      },
      "Properties": [
        {
          "Key": "ItemNotFoundAction",
          "Value": "Fail"
        },
        {
          "Key": "LayoutExpression",
          "Value": "Id,DisplayLabel"
        },
        {
          "Key": "ObjectTypeExpression",
          "Value": "Request"
        },
        {
          "Key": "QueryExpression",
          "Value": "Id=\u0027{{Request.TicketId}}\u0027"
        },
        {
          "Key": "ResultVariableName",
          "Value": "CreatedTicket"
        }
      ]
    },
    {
      "Type": 2,
      "Name": "Create EML file",
      "TechnologyKey": "Text.v1",
      "ActionKey": "oa://Text.v1/CreateFileFromBase64",
      "Properties": [
        {
          "Key": "ContentExpression",
          "Value": "{{Request.EmlFile}}"
        },
        {
          "Key": "FileNameExpression",
          "Value": "Email.eml"
        },
        {
          "Key": "ResultVariableName",
          "Value": "MailFile"
        }
      ]
    },
    {
      "Type": 2,
      "Name": null,
      "TechnologyKey": "Mail.v1",
      "ActionKey": "oa://Mail.v1/ParseEml",
      "Properties": [
        {
          "Key": "EmlExpression",
          "Value": "{{MailFile}}"
        },
        {
          "Key": "InlineHtmlAttachmentsExpression",
          "Value": "False{{# SMAX does NOT support inline attachments.}}"
        },
        {
          "Key": "ResultVariableName",
          "Value": "Mail"
        },
        {
          "Key": "ResultVariableName.Attachments",
          "Value": "MailAttachments"
        }
      ]
    },
    {
      "Type": 2,
      "Name": "Get Person reported by",
      "TechnologyKey": "SMAX.v1",
      "ActionKey": "oa://SMAX.v1/FindRecordByQuery",
      "Connection": {
        "Name": "smax.MyCompany.com"
      },
      "Properties": [
        {
          "Key": "ItemNotFoundAction",
          "Value": "Continue"
        },
        {
          "Key": "LayoutExpression",
          "Value": "Id,Name"
        },
        {
          "Key": "ObjectTypeExpression",
          "Value": "Person"
        },
        {
          "Key": "QueryExpression",
          "Value": "Email=\u0027{{Request.MailboxUpn}}\u0027"
        },
        {
          "Key": "ResultVariableName",
          "Value": "PersonReportedBy"
        }
      ]
    },
    {
      "Type": 2,
      "Name": "Prepare Ticket update",
      "TechnologyKey": "Oktopus.v1",
      "ActionKey": "oa://Oktopus.v1/EvaluateExpression",
      "Properties": [
        {
          "Key": "Expression",
          "Value": "personReportedBy = PersonReportedBy\r\nif personReportedBy == null\r\n  personReportedBy = globalVariable.load \u0022SMAX-Dispatcher-DummyUser\u0022 | json.parse\r\nend\r\n\r\nticketDetails = { }\r\nwith ticketDetails\r\n  Ticket = {\r\n    Type: CreatedTicket.entity_type,\r\n    Id: CreatedTicket.properties.Id,\r\n    Subject: CreatedTicket.properties.DisplayLabel\r\n  }\r\n\r\n  MailSubject = Mail.Subject\r\n  if Mail.Body | string.empty\r\n    MailBody = Mail.TextBody\r\n  else\r\n    MailBody = Mail.Body\r\n  end\r\n\r\n  Owner = {\r\n    Id: personReportedBy.properties.Id,\r\n    Name: personReportedBy.properties.Name\r\n  }\r\n\r\n  if Request.TimeTrack | string.HasContent\r\n    TimeBooking = (Request.TimeTrack | timespan.parse)\r\n  end\r\n  Comment = Request.Comment\r\n\r\n  EmlFileName = Mail.Subject | string.GetFileName \u0022eml\u0022 \u0022Email\u0022\r\nend\r\n\r\nticketDetails | variable.store \u0022UpdateDetails\u0022"
        }
      ]
    },
    {
      "Type": 2,
      "Name": "Add email as comment",
      "TechnologyKey": "SMAX.v1",
      "ActionKey": "oa://SMAX.v1/AddComment",
      "Connection": {
        "Name": "smax.MyCompany.com"
      },
      "Properties": [
        {
          "Key": "ObjectIdExpression",
          "Value": "{{UpdateDetails.Ticket.Id}}"
        },
        {
          "Key": "ObjectTypeExpression",
          "Value": "{{UpdateDetails.Ticket.Type}}"
        },
        {
          "Key": "ResultVariableName",
          "Value": "CreatedEmailComment"
        },
        {
          "Key": "SMAX:Body",
          "Value": "{{UpdateDetails.MailBody}}"
        },
        {
          "Key": "SMAX:CommentFrom",
          "Value": "User"
        },
        {
          "Key": "SMAX:CommentTo",
          "Value": "Agent"
        },
        {
          "Key": "SMAX:FunctionalPurpose",
          "Value": "StatusUpdate"
        },
        {
          "Key": "SMAX:Media",
          "Value": "Email"
        },
        {
          "Key": "SMAX:PrivacyType",
          "Value": "PUBLIC"
        }
      ]
    },
    {
      "Type": 2,
      "Name": "(Optional) Add Agent comment",
      "TechnologyKey": "SMAX.v1",
      "ActionKey": "oa://SMAX.v1/AddComment",
      "Connection": {
        "Name": "smax.MyCompany.com"
      },
      "Properties": [
        {
          "Key": "ObjectIdExpression",
          "Value": "{{UpdateDetails.Ticket.Id}}"
        },
        {
          "Key": "ObjectTypeExpression",
          "Value": "{{UpdateDetails.Ticket.Type}}"
        },
        {
          "Key": "ResultVariableName",
          "Value": "CreatedUserComment"
        },
        {
          "Key": "SMAX:Body",
          "Value": "{{UpdateDetails.Comment | step.skipIfEmpty}}"
        },
        {
          "Key": "SMAX:CommentFrom",
          "Value": "Agent"
        },
        {
          "Key": "SMAX:CommentTo",
          "Value": "Agent"
        },
        {
          "Key": "SMAX:FunctionalPurpose",
          "Value": "ProvideInformation"
        },
        {
          "Key": "SMAX:Media",
          "Value": "UI"
        },
        {
          "Key": "SMAX:PrivacyType",
          "Value": "INTERNAL"
        }
      ]
    },
    {
      "Type": 2,
      "Name": null,
      "TechnologyKey": "Webhook.v1",
      "ActionKey": "oa://Webhook.v1/Response",
      "Properties": [
        {
          "Key": "ContentExpression",
          "Value": "{{\r\nbaseUrl = globalVariable.load \u0022SMAX-Dispatcher-TicketBaseUrl\u0022\r\ntenantId = globalVariable.load \u0022SMAX-Dispatcher-TenantId\u0022\r\nlink = $\u0022{baseUrl}/saw/Request/{CreatedTicket.properties.Id}?TENANTID={tenantId}\u0022\r\n{\r\n  Ticket: {\r\n    Id: UpdateDetails.Ticket.Id,\r\n    Number: UpdateDetails.Ticket.Id,\r\n    Subject: UpdateDetails.Ticket.Subject,\r\n    Link: link\r\n  }\r\n} }}"
        }
      ]
    }
  ]
}